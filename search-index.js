var searchIndex = new Map(JSON.parse('[\
["wasmedge_wasi_socket",{"doc":"","t":"TTTPFGFFRTTPGGFFKKTTFPPPPPNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNCNOMNNNNNHNNNNNNNCNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPFGPPGPPPPNNNNNNNNONNNNNNNHNNNNNNNNNNNONNNOOOOOOOOOOOGPPPGPPPGPPPPPPPPFFSSSPPPPPPPPPPPPPPPFGGGPPPFFFNOOOOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNN","n":["BITS","BITS","BROADCAST","Both","Incoming","IpAddr","Ipv4Addr","Ipv6Addr","Iter","LOCALHOST","LOCALHOST","Read","Shutdown","SocketAddr","TcpListener","TcpStream","ToQType","ToSocketAddrs","UNSPECIFIED","UNSPECIFIED","UdpSocket","V4","V4","V6","V6","Write","accept","address","as_mut","as_mut","as_mut","as_raw_fd","as_raw_fd","as_raw_fd","as_ref","as_ref","as_ref","backward_checked","backward_checked","backward_unchecked","backward_unchecked","bind","bind","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand","bitand_assign","bitand_assign","bitand_assign","bitand_assign","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor","bitor_assign","bitor_assign","bitor_assign","bitor_assign","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","connect","eq","eq","eq","eq","eq","eq","eq","eq","eq","flush","flush","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","forward_checked","forward_checked","forward_unchecked","forward_unchecked","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_bits","from_bits","from_raw_fd","from_raw_fd","from_rr","from_rr","from_rr","from_str","from_str","from_str","from_str","hash","hash","hash","hash","incoming","into","into","into","into","into","into","into","into","into","into_iter","into_raw_fd","into_raw_fd","ip","is_benchmarking","is_benchmarking","is_benchmarking","is_broadcast","is_documentation","is_documentation","is_documentation","is_global","is_global","is_global","is_ipv4","is_ipv4","is_ipv4_mapped","is_ipv6","is_ipv6","is_link_local","is_loopback","is_loopback","is_loopback","is_multicast","is_multicast","is_multicast","is_private","is_reserved","is_shared","is_unicast","is_unicast_global","is_unicast_link_local","is_unique_local","is_unspecified","is_unspecified","is_unspecified","local_addr","local_addr","multicast_scope","new","new","new","new","next","not","not","not","not","nslookup","nslookup_with_dns_server","nslookup_with_host","octets","octets","parse_ascii","parse_ascii","parse_ascii","parse_ascii","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","peer_addr","poll","port","port","q_type","q_type","q_type","read","read","recv_from","resolve","segments","send_to","set_ip","set_nonblocking","set_port","shutdown","size_hint","socket","steps_between","steps_between","to_bits","to_bits","to_canonical","to_canonical","to_ipv4","to_ipv4_mapped","to_ipv6_compatible","to_ipv6_mapped","to_owned","to_owned","to_owned","to_owned","to_owned","to_socket_addrs","to_socket_addrs","to_socket_addrs","to_string","to_string","to_string","to_string","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","write","write","Error","Event","EventType","IO","Read","Subscription","Timeout","Timeout","TimeoutIO","Write","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","event_type","from","from","from","into","into","into","io","poll","timeout","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","userdata","vzip","vzip","vzip","fd","fd","read_event","read_event","timeout","timeout","userdata","userdata","userdata","write_event","write_event","AddressFamily","AiAddrConfig","AiAll","AiCanonname","AiFlags","AiNumericHost","AiNumericServ","AiPassive","AiProtocol","AiV4Mapped","Any","Datagram","IPProtoIP","IPProtoTCP","IPProtoUDP","Inet4","Inet6","IovecRead","IovecWrite","MSG_PEEK","MSG_TRUNC","MSG_WAITALL","SoAcceptconn","SoBindToDevice","SoBroadcast","SoDontroute","SoError","SoKeepalive","SoLinger","SoOobinline","SoRcvbuf","SoRcvlowat","SoRcvtimeo","SoReuseaddr","SoSndbuf","SoSndtimeo","SoType","Socket","SocketOptLevel","SocketOptName","SocketType","SolSocket","Stream","Unspec","WasiAddress","WasiAddrinfo","WasiSockaddr","accept","ai_addr","ai_addrlen","ai_canonname","ai_canonnamelen","ai_family","ai_flags","ai_next","ai_protocol","ai_socktype","as_raw_fd","bind","bind_device","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","broadcast","buf","buf","buf","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","connect","default","default","device","drop","family","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_raw_fd","get_addrinfo","get_local","get_peer","get_recv_timeout","get_send_timeout","into","into","into","into","into","into","into","into","into","into","into","into","into_raw_fd","is_listener","is_unspec","is_v4","is_v6","keepalive","listen","new","new","nonblocking","recv","recv_buffer_size","recv_from","recv_from_vectored","recv_from_with_flags","recv_vectored","recv_with_flags","reuse_address","sa_data","sa_data_len","send","send_buffer_size","send_to","send_to_vectored","send_vectored","set_nonblocking","set_recv_timeout","set_send_timeout","setsockopt","shutdown","size","size","size","take_error","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip"],"q":[[0,"wasmedge_wasi_socket"],[319,"wasmedge_wasi_socket::poll"],[361,"wasmedge_wasi_socket::poll::Subscription"],[372,"wasmedge_wasi_socket::socket"],[620,"std::io::error"],[621,"std::os::fd::raw"],[622,"core::option"],[623,"core::cmp"],[624,"core::fmt"],[625,"core::fmt"],[626,"core::convert"],[627,"core::net::socket_addr"],[628,"core::net::socket_addr"],[629,"core::net::parser"],[630,"core::hash"],[631,"core::net::ip_addr"],[632,"alloc::vec"],[633,"dns_parser::enums"],[634,"core::error"],[635,"alloc::boxed"],[636,"std::io"],[637,"std::io"],[638,"core::option"],[639,"core::any"],[640,"std::time"],[641,"std::os::fd::raw"],[642,"core::time"],[643,"core::mem::maybe_uninit"],[644,"std::io"]],"d":["The size of an IPv4 address in bits.","The size of an IPv6 address in bits.","An IPv4 address representing the broadcast address: …","Both the reading and the writing portions of the <code>TcpStream</code> …","","An IP address, either IPv4 or IPv6.","An IPv4 address.","An IPv6 address.","","An IPv4 address with the address pointing to localhost: …","An IPv6 address representing localhost: <code>::1</code>.","The reading portion of the <code>TcpStream</code> should be shut down.","Possible values which can be passed to the …","An internet socket address, either IPv4 or IPv6.","","","","","An IPv4 address representing an unspecified address: …","An IPv6 address representing the unspecified address: <code>::</code>","","An IPv4 address.","An IPv4 socket address.","An IPv6 address.","An IPv6 socket address.","The writing portion of the <code>TcpStream</code> should be shut down.","Accept incoming connections with given file descriptor …","","","","","","","","","","","","","","","Create TCP socket and bind to the given address.","Create UDP socket and bind to the given address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Create TCP socket and connect to the given address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Creates an <code>IpAddr::V4</code> from a four element byte array.","Creates an <code>IpAddr::V6</code> from an eight element 16-bit array.","Creates an <code>IpAddr::V6</code> from a sixteen element byte array.","Returns the argument unchanged.","Copies this address to a new <code>IpAddr::V4</code>.","Copies this address to a new <code>IpAddr::V6</code>.","Returns the argument unchanged.","Creates an <code>Ipv4Addr</code> from a four element byte array.","Uses <code>Ipv4Addr::from_bits</code> to convert a host byte order <code>u32</code> …","Creates an <code>Ipv6Addr</code> from a sixteen element byte array.","Returns the argument unchanged.","Creates an <code>Ipv6Addr</code> from an eight element 16-bit array.","Uses <code>Ipv6Addr::from_bits</code> to convert a host byte order <code>u128</code> …","Converts a tuple struct (Into&lt;<code>IpAddr</code>&gt;, <code>u16</code>) into a …","Returns the argument unchanged.","Converts a <code>SocketAddrV6</code> into a <code>SocketAddr::V6</code>.","Converts a <code>SocketAddrV4</code> into a <code>SocketAddr::V4</code>.","Converts a native byte order <code>u32</code> into an IPv4 address.","Converts a native byte order <code>u128</code> into an IPv6 address.","","","","","","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","Returns the IP address associated with this socket address.","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this address part of the <code>198.18.0.0/15</code> …","Returns <code>true</code> if this is an address reserved for …","Returns <code>true</code> if this is a broadcast address (…","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this address is in a range designated for …","Returns <code>true</code> if this is an address reserved for …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if the address appears to be globally …","Returns <code>true</code> if this address is an <code>IPv4</code> address, and <code>false</code> …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if the address is an IPv4-mapped address (…","Returns <code>true</code> if this address is an <code>IPv6</code> address, and <code>false</code> …","Returns <code>true</code> if the IP address in this <code>SocketAddr</code> is an …","Returns <code>true</code> if the address is link-local (<code>169.254.0.0/16</code>).","Returns <code>true</code> if this is a loopback address.","Returns <code>true</code> if this is a loopback address (<code>127.0.0.0/8</code>).","Returns <code>true</code> if this is the loopback address (<code>::1</code>), as …","Returns <code>true</code> if this is a multicast address.","Returns <code>true</code> if this is a multicast address (<code>224.0.0.0/4</code>).","Returns <code>true</code> if this is a multicast address (<code>ff00::/8</code>).","Returns <code>true</code> if this is a private address.","Returns <code>true</code> if this address is reserved by IANA for …","Returns <code>true</code> if this address is part of the Shared Address …","Returns <code>true</code> if this is a unicast address, as defined by …","Returns <code>true</code> if the address is a globally routable unicast …","Returns <code>true</code> if the address is a unicast address with …","Returns <code>true</code> if this is a unique local address (<code>fc00::/7</code>).","Returns <code>true</code> for the special ‘unspecified’ address.","Returns <code>true</code> for the special ‘unspecified’ address (…","Returns <code>true</code> for the special ‘unspecified’ address (<code>::</code>…","Get local address.","Get local address.","Returns the address’s multicast scope if the address is …","","Creates a new IPv4 address from four eight-bit octets.","Creates a new IPv6 address from eight 16-bit segments.","Creates a new socket address from an IP address and a port …","","","","","","","","","Returns the four eight-bit integers that make up this …","Returns the sixteen eight-bit integers the IPv6 address …","Parse an IP address from a slice of bytes.","Parse an IPv4 address from a slice of bytes.","Parse an IPv6 address from a slice of bytes.","Parse a socket address from a slice of bytes.","","","","","","","","","Get peer address.","","Returns the port number associated with this socket …","","","","","","","","","Returns the eight 16-bit segments that make up this …","","Changes the IP address associated with this socket address.","","Changes the port number associated with this socket …","","","","","","Converts an IPv4 address into a <code>u32</code> representation using …","Converts an IPv6 address into a <code>u128</code> representation using …","Converts this address to an <code>IpAddr::V4</code> if it is an …","Converts this address to an <code>IpAddr::V4</code> if it is an …","Converts this address to an <code>IPv4</code> address if it is either …","Converts this address to an <code>IPv4</code> address if it’s an …","Converts this address to an IPv4-compatible <code>IPv6</code> address.","Converts this address to an IPv4-mapped <code>IPv6</code> address.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","Get Address Information","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[10,13,10,16,0,0,0,0,14,10,13,16,0,0,0,0,0,0,10,13,0,17,4,17,4,16,1,1,3,1,8,3,1,8,3,1,8,10,13,10,13,1,8,10,10,10,10,13,13,13,13,10,10,13,13,10,10,10,10,13,13,13,13,10,10,13,13,36,3,1,8,16,17,10,13,4,36,3,1,8,16,17,10,13,4,16,17,10,13,4,16,17,10,13,4,17,10,13,4,3,16,17,17,17,10,10,13,13,4,3,3,3,1,8,16,17,17,10,10,13,13,4,4,10,13,10,13,36,3,3,1,8,16,17,17,17,17,17,17,10,10,10,13,13,13,13,4,4,4,4,10,13,3,1,32,10,13,17,10,13,4,17,10,13,4,1,36,3,1,8,16,17,10,13,4,36,3,1,4,17,10,13,10,17,10,13,17,10,13,17,4,13,17,4,10,17,10,13,17,10,13,10,10,10,13,13,13,13,17,10,13,3,1,13,3,10,13,4,36,10,10,13,13,0,0,0,10,13,17,10,13,4,17,17,17,10,10,13,13,4,3,0,4,1,32,10,13,3,3,8,0,13,8,4,3,4,3,36,0,10,13,10,13,17,13,13,13,10,10,16,17,10,13,4,14,4,4,17,10,13,4,36,3,1,8,16,17,10,13,4,36,3,1,8,16,17,10,13,4,36,3,1,8,16,17,10,13,4,36,3,1,8,16,17,10,13,4,3,3,73,0,0,52,73,0,73,52,52,73,73,56,52,73,56,52,52,52,56,73,56,52,73,56,52,52,0,52,52,73,56,52,73,56,52,73,56,52,56,73,56,52,74,75,74,75,76,75,76,74,75,74,75,0,60,60,60,0,60,60,60,0,60,58,58,61,61,61,57,57,0,0,0,0,0,65,65,65,65,65,65,65,65,65,65,65,65,65,65,65,0,0,0,0,64,58,57,0,0,0,7,63,63,63,63,63,63,63,63,63,7,7,7,67,68,57,58,59,60,61,62,63,64,65,7,67,68,57,58,59,60,61,62,63,64,65,7,7,67,68,59,57,58,59,60,61,62,63,64,65,57,58,59,60,61,62,63,64,65,7,62,63,7,7,62,57,58,60,61,62,63,64,65,7,67,67,68,68,57,57,58,59,60,61,62,63,64,65,7,7,63,7,7,7,7,67,68,57,58,59,60,61,62,63,64,65,7,7,7,57,57,57,7,7,62,7,7,7,7,7,7,7,7,7,7,62,62,7,7,7,7,7,7,7,7,7,7,67,68,59,7,57,58,59,60,61,62,63,64,65,67,68,57,58,59,60,61,62,63,64,64,65,65,7,67,68,57,58,59,60,61,62,63,64,65,7,7,67,68,57,58,59,60,61,62,63,64,65,7,67,68,57,58,59,60,61,62,63,64,65,7],"f":"``````````````````````````{{bd}{{l{{j{fh}}}}}}`{fn}{bn}{A`n}{fAb}{bAb}{A`Ab}543{{AdAf}{{Ah{Ad}}}}{{AjAf}{{Ah{Aj}}}}{{AdAf}Ad}{{AjAf}Aj}{{cd}{{l{b}}}Al}{c{{l{A`}}}Al}{{AdAd}Ad}000{{AjAj}Aj}000{{AdAd}An}0{{AjAj}An}0333322221100{ce{}{}}00000000000000000{B`B`}{BbBb}{AdAd}{AjAj}{hh}{{ce}An{}{}}0000{{BbBb}Bd}{{AdAd}Bd}{{AjAj}Bd}{{hh}Bd}{c{{l{f}}}Al}{{B`B`}d}{{BbBb}d}{{BbAj}d}{{BbAd}d}{{AdAd}d}{{AdBb}d}{{AjAj}d}{{AjBb}d}{{hh}d}{f{{l{An}}}}0{{fBf}Bh}{{bBf}Bh}{{A`Bf}Bh}{{B`Bf}{{Bl{AnBj}}}}{{BbBf}{{Bl{AnBj}}}}0{{AdBf}{{Bl{AnBj}}}}0{{AjBf}{{Bl{AnBj}}}}0{{hBf}{{Bl{AnBj}}}}0{{AdAf}{{Ah{Ad}}}}{{AjAf}{{Ah{Aj}}}}{{AdAf}Ad}{{AjAf}Aj}{cc{}}{nf}1111{{{C`{Bn}}}Bb}{{{C`{Cb}}}Bb}13{AdBb}{AjBb}5{{{C`{Bn}}}Ad}{CdAd}{{{C`{Bn}}}Aj}8{{{C`{Cb}}}Aj}{CfAj}{{{j{cCb}}}h{{Ch{Bb}}}};{Cjh}{Clh}63{Abf}{Abb}{Cn{{Ah{D`}}}}{Cn{{Ah{Ad}}}}{Cn{{Ah{Aj}}}}{Db{{Bl{BbDd}}}}{Db{{Bl{AdDd}}}}{Db{{Bl{AjDd}}}}{Db{{Bl{hDd}}}}{{Bbc}AnDf}{{Adc}AnDf}{{Ajc}AnDf}{{hc}AnDf}{bDh}{ce{}{}}000000000{fAb}{bAb}{hBb}{Bbd}{Add}{Ajd}12102102{hd}13023213212221111321{f{{l{h}}}}{b{{l{h}}}}{Aj{{Ah{Dj}}}}{nf}{{BnBnBnBn}Ad}{{CbCbCbCbCbCbCbCb}Aj}{{BbCb}h}{Dh{{Ah{{l{f}}}}}}{AdAd}0{AjAj}0{{DbDb}{{l{{Dl{h}}}}}}{{DbDbDb}{{l{{Dl{h}}}}}}1{Ad{{C`{Bn}}}}{Aj{{C`{Bn}}}}{{{Dn{Bn}}}{{Bl{BbDd}}}}{{{Dn{Bn}}}{{Bl{AdDd}}}}{{{Dn{Bn}}}{{Bl{AjDd}}}}{{{Dn{Bn}}}{{Bl{hDd}}}}{{BbAd}{{Ah{Bd}}}}{{BbBb}{{Ah{Bd}}}}{{BbAj}{{Ah{Bd}}}}{{AdAd}{{Ah{Bd}}}}{{AdBb}{{Ah{Bd}}}}{{AjAj}{{Ah{Bd}}}}{{AjBb}{{Ah{Bd}}}}{{hh}{{Ah{Bd}}}}{f{{l{h}}}}`{hCb}`{{}E`}00{{f{Dn{Bn}}}{{l{Af}}}}0{{A`{Dn{Bn}}}{{l{{j{Afh}}}}}}{{cDb}{{Bl{{Dl{e}}{Ed{Eb}}}}}{EfEh}D`}{Aj{{C`{Cb}}}}{{A`{Dn{Bn}}c}{{l{Af}}}Al}{{hBb}An}{{fd}{{l{An}}}}{{hCb}An}{{fB`}{{l{An}}}}{Dh{{j{Af{Ah{Af}}}}}}`{{AdAd}{{Ah{Af}}}}{{AjAj}{{Ah{Af}}}}{AdCd}{AjCf}{BbBb}{AjBb}{Aj{{Ah{Ad}}}}0{AdAj}0{ce{}{}}0000{{{Al{}{{Ej{c}}}}}{{l{c}}}{{En{}{{El{h}}}}}}{h{{l{{F`{h}}}}}}{h{{Bl{{F`{h}}Fb}}}}{cFd{}}000{c{{Bl{e}}}{}{}}00000000000000000{cFf{}}00000000666666666{{f{Dn{Bn}}}{{l{Af}}}}0``````````777777{FhFh}{{ce}An{}{}}`{cc{}}00:::{{Fjcdd{Ah{Fl}}}FhFn}{{{Dn{Fh}}}{{l{{Dl{G`}}}}}}{{FjFl}Fh}=888888777`===``````````````````````````````````````````````````````````{{nd}{{l{n}}}}`````````{nAb}{{nh}{{l{An}}}}{{n{Ah{{Dn{Bn}}}}}{{l{An}}}}{ce{}{}}00000000000000000000000{n{{l{d}}}}```{GbGb}{GdGd}{GfGf}{GhGh}{GjGj}{GlGl}{GnGn}{H`H`}{HbHb}{{ce}An{}{}}00000000={{}Gl}{{}Gn}{n{{l{{Ah{{Dl{Bn}}}}}}}}{nAn}`{{GbBf}Bh}{{GdBf}Bh}{{GhBf}Bh}{{GjBf}Bh}{{GlBf}Bh}{{GnBf}Bh}{{H`Bf}Bh}{{HbBf}Bh}{{nBf}Bh}{HdHf}{cc{}}{HdHh}11{hGb}222222222{Abn}{{DbDbGnAf{Dl{Gl}}{Dl{{C`{Bn}}}}{Dl{Fd}}}{{l{{Dl{Gn}}}}}}{n{{l{h}}}}0{n{{l{{Ah{Hj}}}}}}0{ce{}{}}00000000000{nAb}{n{{l{d}}}}{Gbd}001{{nHl}{{l{An}}}}{{Gb{Dn{Bn}}}Gl}{{GbGd}{{l{n}}}}4{{n{Dn{Bn}}}{{l{Af}}}}{n{{l{Af}}}}{{n{Dn{Bn}}}{{l{{j{Afh}}}}}}{{n{Dn{Hf}}Cb}{{l{{j{AfhAf}}}}}}{{n{Dn{{Hn{Bn}}}}Cb}{{l{{j{AfhAf}}}}}}{{n{Dn{Hf}}Cb}{{l{{j{AfAf}}}}}}{{n{Dn{{Hn{Bn}}}}Cb}{{l{{j{AfAf}}}}}};``65{{n{Dn{Bn}}h}{{l{Af}}}}{{n{Dn{I`}}hCb}{{l{Af}}}}{{n{Dn{I`}}Cb}{{l{Af}}}}{{nd}{{l{An}}}}{{n{Ah{Hj}}}{{l{An}}}}0{{nH`Hbc}{{l{An}}}{}}{{nB`}{{l{An}}}}```{n{{l{An}}}}{ce{}{}}00000000{c{{Bl{e}}}{}{}}00000000{Hl{{Bl{H`c}}}{}}1{Hl{{Bl{Hbc}}}{}}22222222222222{n{{l{Gd}}}}{cFf{}}00000000000555555555555","c":[],"p":[[5,"TcpListener",0],[1,"bool"],[5,"TcpStream",0],[6,"SocketAddr",0],[1,"tuple"],[8,"Result",620],[5,"Socket",372],[5,"UdpSocket",0],[8,"RawFd",621],[5,"Ipv4Addr",0],[1,"usize"],[6,"Option",622],[5,"Ipv6Addr",0],[10,"ToSocketAddrs",0],[1,"unit"],[6,"Shutdown",0],[6,"IpAddr",0],[6,"Ordering",623],[5,"Formatter",624],[8,"Result",624],[5,"Error",624],[6,"Result",625],[1,"u8"],[1,"array"],[1,"u16"],[1,"u32"],[1,"u128"],[10,"Into",626],[5,"SocketAddrV6",627],[5,"SocketAddrV4",627],[6,"RData",628],[10,"ToQType",0],[1,"str"],[5,"AddrParseError",629],[10,"Hasher",630],[5,"Incoming",0],[6,"Ipv6MulticastScope",631],[5,"Vec",632],[1,"slice"],[6,"QueryType",633],[10,"Error",634],[5,"Box",635],[10,"Write",636],[10,"Read",636],[17,"Iter"],[17,"Item"],[10,"Iterator",637],[5,"IntoIter",622],[5,"Error",620],[5,"String",638],[5,"TypeId",639],[6,"Subscription",319],[1,"u64"],[5,"SystemTime",640],[10,"AsRawFd",621],[5,"Event",319],[6,"AddressFamily",372],[6,"SocketType",372],[5,"WasiAddress",372],[6,"AiFlags",372],[6,"AiProtocol",372],[5,"WasiSockaddr",372],[5,"WasiAddrinfo",372],[6,"SocketOptLevel",372],[6,"SocketOptName",372],[5,"iovec",641],[5,"IovecRead",372],[5,"IovecWrite",372],[5,"Duration",642],[1,"i32"],[20,"MaybeUninit",643],[5,"IoSlice",636],[6,"EventType",319],[15,"IO",361],[15,"TimeoutIO",361],[15,"Timeout",361]],"b":[[43,"impl-BitAnd%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[44,"impl-BitAnd%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[45,"impl-BitAnd-for-Ipv4Addr"],[46,"impl-BitAnd%3CIpv4Addr%3E-for-%26Ipv4Addr"],[47,"impl-BitAnd-for-Ipv6Addr"],[48,"impl-BitAnd%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[49,"impl-BitAnd%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[50,"impl-BitAnd%3CIpv6Addr%3E-for-%26Ipv6Addr"],[51,"impl-BitAndAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[52,"impl-BitAndAssign-for-Ipv4Addr"],[53,"impl-BitAndAssign-for-Ipv6Addr"],[54,"impl-BitAndAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[55,"impl-BitOr%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[56,"impl-BitOr%3C%26Ipv4Addr%3E-for-%26Ipv4Addr"],[57,"impl-BitOr-for-Ipv4Addr"],[58,"impl-BitOr%3CIpv4Addr%3E-for-%26Ipv4Addr"],[59,"impl-BitOr-for-Ipv6Addr"],[60,"impl-BitOr%3C%26Ipv6Addr%3E-for-%26Ipv6Addr"],[61,"impl-BitOr%3CIpv6Addr%3E-for-%26Ipv6Addr"],[62,"impl-BitOr%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[63,"impl-BitOrAssign%3C%26Ipv4Addr%3E-for-Ipv4Addr"],[64,"impl-BitOrAssign-for-Ipv4Addr"],[65,"impl-BitOrAssign-for-Ipv6Addr"],[66,"impl-BitOrAssign%3C%26Ipv6Addr%3E-for-Ipv6Addr"],[101,"impl-PartialEq-for-IpAddr"],[102,"impl-PartialEq%3CIpv6Addr%3E-for-IpAddr"],[103,"impl-PartialEq%3CIpv4Addr%3E-for-IpAddr"],[104,"impl-PartialEq-for-Ipv4Addr"],[105,"impl-PartialEq%3CIpAddr%3E-for-Ipv4Addr"],[106,"impl-PartialEq-for-Ipv6Addr"],[107,"impl-PartialEq%3CIpAddr%3E-for-Ipv6Addr"],[109,"impl-Write-for-%26TcpStream"],[110,"impl-Write-for-TcpStream"],[115,"impl-Display-for-IpAddr"],[116,"impl-Debug-for-IpAddr"],[117,"impl-Debug-for-Ipv4Addr"],[118,"impl-Display-for-Ipv4Addr"],[119,"impl-Debug-for-Ipv6Addr"],[120,"impl-Display-for-Ipv6Addr"],[121,"impl-Debug-for-SocketAddr"],[122,"impl-Display-for-SocketAddr"],[133,"impl-From%3C%5Bu8;+4%5D%3E-for-IpAddr"],[134,"impl-From%3C%5Bu16;+8%5D%3E-for-IpAddr"],[135,"impl-From%3C%5Bu8;+16%5D%3E-for-IpAddr"],[137,"impl-From%3CIpv4Addr%3E-for-IpAddr"],[138,"impl-From%3CIpv6Addr%3E-for-IpAddr"],[140,"impl-From%3C%5Bu8;+4%5D%3E-for-Ipv4Addr"],[141,"impl-From%3Cu32%3E-for-Ipv4Addr"],[142,"impl-From%3C%5Bu8;+16%5D%3E-for-Ipv6Addr"],[144,"impl-From%3C%5Bu16;+8%5D%3E-for-Ipv6Addr"],[145,"impl-From%3Cu128%3E-for-Ipv6Addr"],[146,"impl-From%3C(I,+u16)%3E-for-SocketAddr"],[148,"impl-From%3CSocketAddrV6%3E-for-SocketAddr"],[149,"impl-From%3CSocketAddrV4%3E-for-SocketAddr"],[219,"impl-Not-for-%26Ipv4Addr"],[220,"impl-Not-for-Ipv4Addr"],[221,"impl-Not-for-Ipv6Addr"],[222,"impl-Not-for-%26Ipv6Addr"],[232,"impl-PartialOrd%3CIpv4Addr%3E-for-IpAddr"],[233,"impl-PartialOrd-for-IpAddr"],[234,"impl-PartialOrd%3CIpv6Addr%3E-for-IpAddr"],[235,"impl-PartialOrd-for-Ipv4Addr"],[236,"impl-PartialOrd%3CIpAddr%3E-for-Ipv4Addr"],[237,"impl-PartialOrd-for-Ipv6Addr"],[238,"impl-PartialOrd%3CIpAddr%3E-for-Ipv6Addr"],[247,"impl-Read-for-%26TcpStream"],[248,"impl-Read-for-TcpStream"],[275,"impl-ToSocketAddrs-for-SocketAddr"],[276,"impl-ToSocketAddrs-for-SocketAddr"],[317,"impl-Write-for-%26TcpStream"],[318,"impl-Write-for-TcpStream"]],"a":{"in6addr_any":[19],"in6addr_any_init":[19],"in6addr_loopback":[10],"in6addr_loopback_init":[10],"inaddr_any":[18]}}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
